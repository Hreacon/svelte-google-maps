{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.html",
    "..\\..\\packages\\svelte-google-maps\\Map.html",
    "..\\..\\packages\\svelte-google-maps\\Info.html"
  ],
  "sourcesContent": [
    "<div class=\"sm:flex border border-grey border-solid\">\n  <div ref:background class=\"sm:w-64\">\n    <img class=\"p-3 mt-4\" src=\"public/pulse-logo-dark.png\" alt=\"GRTC Pulse\">\n  </div>\n  <div ref:container class=\"w-full border-b border-grey border-solid\">\n    <Map :map defer bind:center bind:zoom>\n      {{#each stations as station}}\n        <Marker :map position={{station.position}} title={{station.title}} :icon on:click=\"set({ selected: station })\" />\n      {{/each}}\n\n      <Polyline :map path={{route}} />\n\n      {{#if selected}}  \n        <Info :map position={{selected.position}} on:close=\"set({ selected: null })\">\n          <div class=\"whitespace-no-wrap\">{{selected.title}}</div>\n        </Info>\n      {{/if}}\n    </Map>\n  </div>\n</div>\n\n<div class=\"my-4 text-grey-darker text-sm text-right\">\n  Latitude: {{center.lat.toFixed(6)}} &mdash; Longitude: {{center.lng.toFixed(6)}} &mdash;\n  <label for=\"zoom\">Zoom</label>:\n  <input type=\"range\" min=\"1\" max=\"18\" bind:value=\"zoom\" class=\"align-text-top\" /> {{zoom}}\n</div>\n\n<style>\n  ref:container {\n    height: 600px;\n  }\n\n  ref:background {\n    background-color: #005da5;\n  }\n</style>\n\n<script>\n  import { Context } from 'svelte-google-maps';\n  import Map from 'svelte-google-maps/Map.html';\n  import Marker from 'svelte-google-maps/Marker.html';\n  import Polyline from 'svelte-google-maps/Polyline.html';\n  import Info from 'svelte-google-maps/Info.html';\n  import { center, stations, route } from './data';\n\n  const API_KEY = \"AIzaSyD7oUvzDD-eXoWc91eECCa0eMHmHVZb1Cg\";\n  \n  const icon = {\n    path: 'M 0,0 m -2,0 a 2,2 0 2,0 4,0 a 2,2 0 2,0 -4,0',\n    fillColor: '#61bb46',\n    fillOpacity: 1,\n    scale: 3,\n    strokeColor: '#005da5',\n    strokeWeight: 2.5\n  };\n\n  export default {\n    components: { Map, Marker, Polyline, Info },\n\n    data() {\n      return {\n        map: new Context(API_KEY, { beta: true }),\n        center,\n        zoom: 13,\n        stations,\n        route,\n        icon,\n\n        offset(container) {\n          const { offsetWidth: width } = container;\n          return { x: -width / 2, y: 10 };\n        },\n        selected: null\n      };\n    }\n  }\n</script>\n",
    "<div ref:map on:intersection=\"load()\"></div>\n<div ref:children><slot /></div>\n\n<style>\n  ref:map {\n    width: 100%;\n    height: 100%;\n  }\n\n  ref:children {\n    visibility: hidden;\n  }\n</style>\n\n<script>\n  import { intersection } from './src/events';\n  import { changer } from './src/utils';\n\n  export default {\n    data() {\n      return {\n        defer: false,\n        center: { lat: 0, lng: 0 },\n        zoom: 8,\n        instance: null,\n        loading: null,\n        loaded: false\n      };\n    },\n\n    events: { intersection },\n\n    oncreate() {\n      // Load map immediately or wait defer until intersection\n      const defer = this.get('defer');\n      if (!defer || defer === 'false') this.load();\n    },\n\n    async ondestroy() {\n      let { instance, loading } = this.get();\n      \n      if (!instance && loading) instance = await loading;\n      if (!instance) return;\n\n      // TODO Remove listeners from instance\n      console.log('destroy', instance);\n    },\n\n    methods: {\n      async load() {\n        let { instance, map: context, center, zoom, loaded, loading } = this.get();\n\n        if (loaded) return instance;\n        if (loading) return loading;\n\n        loading = context.load(this.refs.map, { center, zoom }).then(({ map }) => map);\n        this.set({ loaded: false, loading });\n\n        instance = await loading;\n\n        // Setup two-way binding between component and map\n        // - Use `changer` to avoid additional sets/changes for internal changes\n        const change = changer();\n\n        // Attach listeners to instance\n        instance.addListener('zoom_changed', () => {\n          change(() => {\n            const zoom = instance.getZoom();\n            this.set({ zoom })\n          });\n        });\n\n        instance.addListener('center_changed', () => {          \n          change(() => {\n            const center = instance.getCenter();\n            const lat = center.lat();\n            const lng = center.lng();\n\n            this.set({ center: { lat, lng } })\n          });\n        });\n\n        // Attach observers to component\n        this.observe('center', center => {\n          change(() => instance.setCenter(center));\n        }, { init: false });\n\n        this.observe('zoom', zoom => {\n          change(() => instance.setZoom(zoom));\n        }, { init: false });\n\n        this.set({ instance, loaded: true, loading: null });\n\n        return instance;\n      }\n    },\n  }\n</script>\n",
    "<Overlay :map :position>\n  <div ref:container style=\"--background-color: {{background}};\">\n    <div><slot /></div>\n    <button ref:close on:click=\"fire('close')\">&times;</button>\n  </div>\n</Overlay>\n\n<style>\n  ref:container {\n    display: flex;\n    position: relative;\n    font-size: 1rem;\n    background-color: white;\n    background-color: var(--background-color);\n    padding: 0.6rem 0 0.6rem 0.8rem;\n    transform: translate(-50%, calc(-100% - 10px));\n    box-shadow: 0 0 0.25rem 0 #999;\n  }\n\n  ref:container:after {\n    position: absolute;\n    bottom: -9px;\n    left: 50%;\n    margin-left: -10px;\n    width: 0;\n    border-top: 10px solid white;\n    border-top: 10px solid var(--background-color);\n    border-right: 10px solid transparent;\n    border-left: 10px solid transparent;\n    content: \" \";\n    font-size: 0;\n    line-height: 0;\n  }\n\n  ref:close {\n    padding: 0 0.5rem 0 0.5rem;\n    font-size: 1rem;\n  }\n</style>\n\n<script>\n  import Overlay from './Overlay.html';\n\n  export default {\n    components: { Overlay },\n\n    data() {\n      return {\n        background: 'white'\n      };\n    }\n  }\n</script>\n"
  ],
  "names": [],
  "mappings": "AA4BE,yCAAc,CAAC,AACb,MAAM,CAAE,KAAK,AACf,CAAC,AAED,0CAAe,CAAC,AACd,gBAAgB,CAAE,OAAO,AAC3B,CAAC;AC9BD,mCAAQ,CAAC,AACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AAED,wCAAa,CAAC,AACZ,UAAU,CAAE,MAAM,AACpB,CAAC;ACHD,yCAAc,CAAC,AACb,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,gBAAgB,CAAE,IAAI,kBAAkB,CAAC,CACzC,OAAO,CAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAC/B,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAC9C,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,AAChC,CAAC,AAED,yCAAa,MAAM,AAAC,CAAC,AACnB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,GAAG,CACT,WAAW,CAAE,KAAK,CAClB,KAAK,CAAE,CAAC,CACR,UAAU,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAC5B,UAAU,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,CAC9C,YAAY,CAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CACpC,WAAW,CAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CACnC,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,CAAC,CACZ,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,qCAAU,CAAC,AACT,OAAO,CAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAC1B,SAAS,CAAE,IAAI,AACjB,CAAC"
}